{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2025-09-21T18:30:59-04:00",
    "name": "VEIN",
    "author": "noreply@kozejin.dev",
    "description": "VEIN is a post-apocalyptic survival multiplayer sandbox game. Gather supplies to survive, explore abandoned buildings, defend your home, and rebuild society, whether alone or with friends.",
    "features": [
        "steam_disk_space"
    ],
    "docker_images": {
        "SteamCMD_Debian": "ghcr.io\/parkervcp\/steamcmd:debian"
    },
    "file_denylist": [
        "VeinServer.sh"
    ],
    "startup": ".\/Vein\/Binaries\/Linux\/VeinServer-Linux-Test -Port={{SERVER_PORT}} -QueryPort={{QUERY_PORT}} -log",
    "config": {
        "files": "{\r\n    \"Vein\/Saved\/Config\/LinuxServer\/Game.ini\": {\r\n        \"parser\": \"file\",\r\n        \"find\": {\r\n            \"ServerName=\": \"ServerName={{server.build.env.SERVER_NAME}}\",\r\n            \"Password=\": \"Password={{server.build.env.SERVER_PASSWORD}}\",\r\n            \"ServerDescription=\": \"ServerDescription={{server.build.env.SERVER_DESCRIPTION}}\",\r\n            \"bPublic=\": \"bPublic={{server.build.env.SERVER_PUBLIC}}\",\r\n            \"MaxPlayers=\": \"MaxPlayers={{server.build.env.MAX_PLAYERS}}\",\r\n            \"GameServerQueryPort=\": \"GameServerQueryPort={{server.build.env.QUERY_PORT}}\",\r\n            \"DiscordChatWebhookURL=\": \"DiscordChatWebhookURL={{server.build.env.DISCORD_WEBHOOK}}\",\r\n            \"GS_ShowScoreboardBadges=\": \"GS_ShowScoreboardBadges={{server.build.env.ADMIN_BADGES}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Started session\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\n# steamcmd Base Installation Script\r\n#\r\n# Server Files: \/mnt\/server\r\n# Image to install with is 'ghcr.io\/parkervcp\/installers:debian'\r\n\r\n\r\n# Install packages. Default packages below are not required if using our existing install image thus speeding up the install process.\r\n#apt -y update\r\n#apt -y --no-install-recommends install curl lib32gcc-s1 ca-certificates\r\n\r\n## just in case someone removed the defaults.\r\nif [[ \"${STEAM_USER}\" == \"\" ]] || [[ \"${STEAM_PASS}\" == \"\" ]]; then\r\n    echo -e \"steam user is not set.\\n\"\r\n    echo -e \"Using anonymous user.\\n\"\r\n    STEAM_USER=anonymous\r\n    STEAM_PASS=\"\"\r\n    STEAM_AUTH=\"\"\r\nelse\r\n    echo -e \"user set to ${STEAM_USER}\"\r\nfi\r\n\r\n## download and install steamcmd\r\ncd \/tmp\r\nmkdir -p \/mnt\/server\/steamcmd\r\ncurl -sSL -o steamcmd.tar.gz https:\/\/steamcdn-a.akamaihd.net\/client\/installer\/steamcmd_linux.tar.gz\r\ntar -xzvf steamcmd.tar.gz -C \/mnt\/server\/steamcmd\r\nmkdir -p \/mnt\/server\/steamapps # Fix steamcmd disk write error when this folder is missing\r\ncd \/mnt\/server\/steamcmd\r\n\r\n# SteamCMD fails otherwise for some reason, even running as root.\r\n# This is changed at the end of the install process anyways.\r\nchown -R root:root \/mnt\r\nexport HOME=\/mnt\/server\r\n\r\n## install game using steamcmd\r\n.\/steamcmd.sh +force_install_dir \/mnt\/server +login ${STEAM_USER} ${STEAM_PASS} ${STEAM_AUTH} $( [[ \"${WINDOWS_INSTALL}\" == \"1\" ]] && printf %s '+@sSteamCmdForcePlatformType windows' ) +app_update ${SRCDS_APPID} $( [[ -z ${SRCDS_BETAID} ]] || printf %s \"-beta ${SRCDS_BETAID}\" ) $( [[ -z ${SRCDS_BETAPASS} ]] || printf %s \"-betapassword ${SRCDS_BETAPASS}\" ) ${INSTALL_FLAGS} validate +quit ## other flags may be needed depending on install. looking at you cs 1.6\r\n\r\n## set up 32 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk32\r\ncp -v linux32\/steamclient.so ..\/.steam\/sdk32\/steamclient.so\r\n\r\n## set up 64 bit libraries\r\nmkdir -p \/mnt\/server\/.steam\/sdk64\r\ncp -v linux64\/steamclient.so ..\/.steam\/sdk64\/steamclient.so\r\n## add below your custom commands if needed\r\n\r\n# Configuration Files\r\nBASE_DIR=\"\/mnt\/server\/Vein\/Saved\/Config\/LinuxServer\"\r\nGAME_INI_URL=\"https:\/\/raw.githubusercontent.com\/dkoz\/eggs\/refs\/heads\/main\/steam\/vein\/Game.ini\"\r\nENGINE_INI_URL=\"https:\/\/raw.githubusercontent.com\/dkoz\/eggs\/refs\/heads\/main\/steam\/vein\/Engine.ini\"\r\n\r\nmkdir -p \"$BASE_DIR\"\r\n\r\nif [[ -f \"$BASE_DIR\/Game.ini\" && -f \"$BASE_DIR\/Engine.ini\" ]]; then\r\n    echo \"Config files exist, skipping\"\r\nelse\r\n    echo \"Config files missing, fetching from repo\"\r\n    curl -fsSL -o \"$BASE_DIR\/Game.ini\" \"$GAME_INI_URL\"\r\n    curl -fsSL -o \"$BASE_DIR\/Engine.ini\" \"$ENGINE_INI_URL\"\r\nfi\r\n\r\n## install end\r\necho \"-----------------------------------------\"\r\necho \"Installation completed...\"\r\necho \"-----------------------------------------\"",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "App ID",
            "description": "Do not edit!",
            "env_variable": "SRCDS_APPID",
            "default_value": "2131400",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string|in:2131400",
            "field_type": "text"
        },
        {
            "name": "Auto Update",
            "description": "Auto update the server on start.",
            "env_variable": "AUTO_UPDATE",
            "default_value": "1",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Max Players",
            "description": "",
            "env_variable": "MAX_PLAYERS",
            "default_value": "16",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|numeric|between:1,32",
            "field_type": "text"
        },
        {
            "name": "Public IP",
            "description": "Set this to the server public ip address.\r\nOnly needed if the allocation is a local ip, else the allocate ip will be used automatically",
            "env_variable": "PUBLIC_IP",
            "default_value": "",
            "user_viewable": true,
            "user_editable": false,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Server Name",
            "description": "",
            "env_variable": "SERVER_NAME",
            "default_value": "A Pterodactyl Hosted Server",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|max:64",
            "field_type": "text"
        },
        {
            "name": "Server Password",
            "description": "If specified, players must provide this password to join the server.",
            "env_variable": "SERVER_PASSWORD",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|alpha_dash|between:1,30",
            "field_type": "text"
        },
        {
            "name": "Query Port",
            "description": "",
            "env_variable": "QUERY_PORT",
            "default_value": "27015",
            "user_viewable": true,
            "user_editable": false,
            "rules": "required|numeric",
            "field_type": "text"
        },
        {
            "name": "Server Description",
            "description": "The description of the server.",
            "env_variable": "SERVER_DESCRIPTION",
            "default_value": "A server. You can join it.",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string|max:128",
            "field_type": "text"
        },
        {
            "name": "Public Server",
            "description": "This defines if your server is public or not.",
            "env_variable": "SERVER_PUBLIC",
            "default_value": "True",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string|in:True,False",
            "field_type": "text"
        },
        {
            "name": "Discord Chat Webhook",
            "description": "You can have in-game global chat forward to a Discord channel.",
            "env_variable": "DISCORD_WEBHOOK",
            "default_value": "",
            "user_viewable": true,
            "user_editable": true,
            "rules": "nullable|string",
            "field_type": "text"
        },
        {
            "name": "Show Scoreboard Badges",
            "description": "1 will show scoreboard badges for admins and super admins; 0 will hide them.",
            "env_variable": "ADMIN_BADGES",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        }
    ]
}